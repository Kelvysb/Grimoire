@using BlazorInputFile
@inherits ScriptEditBase
<EditForm Model="@ScriptBlock" OnValidSubmit="@Submit" class="mt-4">
    <DataAnnotationsValidator />
    <div class="row line"></div>
    @if (!IsEdit)
    {
        <div class="form-group row">
            <label class="col-sm-2">Script Name:</label>
            <InputText id="Name" class="col-sm-10"
                       @bind-Value="@ScriptBlock.Name"
                       placeholder="Enter the script name" />
            <ValidationMessage class="alert" For="@(() => ScriptBlock.Name)" />
        </div>
    }
    else
    {
        <div class="form-group row">
            <label class="col-sm-2">Script Name:</label>
            <label id="Name" class="col-sm-10">@ScriptBlock.Name</label>
            <ValidationMessage class="alert" For="@(() => ScriptBlock.Name)" />
        </div>
    }
    <div class="form-group row">
        <label class="col-sm-2">Display name:</label>
        <InputText id="Description" class="col-sm-10"
                   @bind-Value="@ScriptBlock.Description"
                   placeholder="Enter the script description" />
        <ValidationMessage class="alert" For="@(() => ScriptBlock.Description)" />
    </div>
    <div class="form-group row">
        <label class="col-sm-2">Script Group:</label>
        <InputText id="Group" class="col-sm-10"
                   @bind-Value="@ScriptBlock.Group"
                   placeholder="Enter the script group" />
        <ValidationMessage class="alert" For="@(() => ScriptBlock.Group)" />
    </div>
    <div class="form-group row">
        <label class="col-sm-2">Success Pattern:</label>
        <InputText id="Group" class="col-sm-10"
                   @bind-Value="@ScriptBlock.SuccessPatern"
                   placeholder="Enter the succsess pattern" />
        <ValidationMessage class="alert" For="@(() => ScriptBlock.SuccessPatern)" />
    </div>
    <div class="form-group row">
        <label class="col-sm-2">Result Filter:</label>
        <InputText id="Group" class="col-sm-4"
                   @bind-Value="@ScriptBlock.ExtractResult.Start"
                   placeholder="Enter the start of result filter" />
        <ValidationMessage class="alert" For="@(() => ScriptBlock.ExtractResult.Start)" />
        <label class="col-sm-2">to:</label>
        <InputText id="Group" class="col-sm-4"
                   @bind-Value="@ScriptBlock.ExtractResult.End"
                   placeholder="Enter the end of result filter" />
        <ValidationMessage class="alert" For="@(() => ScriptBlock.ExtractResult.End)" />
    </div>
    <div class="form-group row">
        <label class="col-sm-2">Alert Level:</label>
        <InputSelect id="AlertLevel" class="col-sm-4"
                     @bind-Value="@AlertLevelHolder">
            <option selected>Error</option>
            <option>Warning</option>
            <option>Silent</option>
        </InputSelect>
        <label class="col-sm-2">Run mode:</label>
        <InputSelect id="RunMode" class="col-sm-4"
                     @bind-Value="@ExecutionModeHolder">
            <option selected>Manual</option>
            <option>Interval</option>
            <option>Run on start</option>
        </InputSelect>
        <ValidationMessage class="alert" For="@(() => ScriptBlock.ExecutionMode)" />
    </div>

    <div class="form-group row">
        <label class="col-sm-2">Timeout:</label>
        <InputNumber id="Timeout" class="col-sm-4"
                     @bind-Value="@ScriptBlock.TimeOut">
        </InputNumber>
        @if (ExecutionModeHolder.Equals("Interval"))
        {
            <label class="col-sm-2">Interval (sec):</label>
            <InputNumber id="Interval" class="col-sm-4"
                         @bind-Value="@ScriptBlock.Interval"
                         placeholder="Enter the script interval (in seconds)" />
            <ValidationMessage class="alert" For="@(() => ScriptBlock.Interval)" />
        }
    </div>

    <div class="form-group row">
        <label class="col-sm-2">Script:</label>
        <InputFile id="OriginalScript" OnChange="HandleFileSelected" />
        <ValidationMessage class="alert" For="@(() => ScriptBlock.Script)" />
    </div>
    <div class="form-group row">
        <label class="col-sm-2">Additional Files:</label>
        <InputFile id="AdditionalFiles" OnChange="HandleAdditionalFilesSelected" multiple />
        <ValidationMessage class="alert" For="@(() => ScriptBlock.Script)" />
    </div>
    <div class="row">
        <ValidationSummary />
    </div>
    <button type="submit" class="button-submit rounded">
        <img class="big-simbol button" src="./images/save.svg" />
    </button>
</EditForm>